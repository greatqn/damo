spring.profiles.active=development

##出现错误时, 直接抛出异常
spring.mvc.throw-exception-if-no-handler-found=true
##不要为我们工程中的资源文件建立映射
#spring.resources.add-mappings=false

spring.application.name = damo-service-sn-provider
server.port = 9090
#management.port = 9091


management.endpoints.web.exposure.include=* 
#management.endpoints.web.exposure.exclude=env
management.endpoint.health.show-details=always

#boot admin 配置 http://codecentric.github.io/spring-boot-admin/2.0.1/
#spring.boot.admin.client.url=http://127.0.0.1:8081/
#本服务地址
#spring.boot.admin.client.instance.service-url=http://127.0.0.1:9090/


# Base packages to scan Dubbo Components (e.g @Service , @Reference)
dubbo.scan.basePackages  = com.damo.generator.service

# Dubbo Config properties
## ApplicationConfig Bean
dubbo.application.id = damo-service-provider
dubbo.application.name = damo-service-provider

dubbo.application.qos.port=22222
dubbo.application.qos.enable=false


## RegistryConfig Bean
dubbo.registry.id = my-registry
#dubbo.registry.address = N/A
dubbo.registry.address = redis://auth:@127.0.0.1:6379?max.active=500


# Dubbo Endpoint (default status is disable)
endpoints.dubbo.enabled = true

# Dubbo Health
## StatusChecker Name defaults (default : "memory", "load" )
management.health.dubbo.status.defaults = memory
## StatusChecker Name extras (default : empty )
management.health.dubbo.status.extras =load,threadpool


##################redis基础配置#################
spring.redis.database=1
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=
##当客户端闲置多长时间后关闭连接，如果指定为0，表示关闭该功能
spring.redis.timeout=5000
#
##################redis线程池设置#################
## 连接池中的最大空闲连接，默认值也是8。
#spring.redis.pool.max-idle=500
##连接池中的最小空闲连接，默认值也是0。
#spring.redis.pool.min-idle=50
## 如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
#spring.redis.pool.max-active=2000
## 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException
#spring.redis.pool.max-wait=5000
#
#spring.redis.pool.test-on-create=false
#spring.redis.pool.test-on-borrow=true
#spring.redis.pool.test-on-return=false
#spring.redis.pool.test-while-idle=true


spring.datasource.url=jdbc\:mysql\://localhost\:3306/damo?serverTimezone=Asia/Shanghai&useUnicode\=true&characterEncoding\=utf-8&zeroDateTimeBehavior\=convertToNull
spring.datasource.username=root
spring.datasource.password=root


#数据源
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 初始化大小，最小，最大
spring.datasource.initialSize=1
spring.datasource.minIdle=3
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=30000
spring.datasource.validationQuery=select 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

spring.flyway.enabled=true
spring.flyway.clean-disabled=true
spring.flyway.check-location=true
spring.flyway.url=jdbc\:mysql\://localhost\:3306/damo?serverTimezone=Asia/Shanghai&useUnicode\=true&characterEncoding\=utf-8&zeroDateTimeBehavior\=convertToNull
spring.flyway.user=root
spring.flyway.password=root

#mybatis.mapper-locations=classpath*:mappers/**/*.xml
mybatis.configuration.cache-enabled=false
mybatis.configuration.lazy-loading-enabled=false
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.type-aliases-package=com.damo.*.model
mybatis.mapper-locations=

pagehelper.helper-dialect=mysql
