<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.damo.generator.dao.GidWorkerMapper">
  <resultMap id="BaseResultMap" type="com.damo.generator.model.GidWorkerDAO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="pid" jdbcType="VARCHAR" property="pid" />
    <result column="info" jdbcType="VARCHAR" property="info" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modify" jdbcType="TIMESTAMP" property="gmtModify" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, ip, pid, info, `operator`, gmt_create, gmt_modify
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from gid_worker
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from gid_worker
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="GidWorkerDAO" >
    insert into gid_worker (id,ip, pid, info,
      `operator`, gmt_create, gmt_modify
      )
    values (#{id},#{ip,jdbcType=VARCHAR}, #{pid,jdbcType=VARCHAR}, #{info,jdbcType=VARCHAR},
      #{operator,jdbcType=VARCHAR}, now(3), now(3)
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="GidWorkerDAO" useGeneratedKeys="true">
    insert into gid_worker
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ip != null">
        ip,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="info != null">
        info,
      </if>
      <if test="operator != null">
        `operator`,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModify != null">
        gmt_modify,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=VARCHAR},
      </if>
      <if test="info != null">
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null">
        #{gmtModify,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByExampleSelective" parameterType="map">
    update gid_worker
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=VARCHAR},
      </if>
      <if test="record.info != null">
        info = #{record.info,jdbcType=VARCHAR},
      </if>
      <if test="record.operator != null">
        `operator` = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModify != null">
        gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update gid_worker
    set id = #{record.id,jdbcType=INTEGER},
      ip = #{record.ip,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=VARCHAR},
      info = #{record.info,jdbcType=VARCHAR},
      `operator` = #{record.operator,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="GidWorkerDAO">
    update gid_worker
    <set>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=VARCHAR},
      </if>
      <if test="info != null">
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        `operator` = #{operator,jdbcType=VARCHAR},
      </if>
        gmt_modify = now(3),

    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="GidWorkerDAO">
    update gid_worker
    set ip = #{ip,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=VARCHAR},
      info = #{info,jdbcType=VARCHAR},
      `operator` = #{operator,jdbcType=VARCHAR},
      gmt_modify = now(3)
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByEmpty" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from gid_worker
    <!--where gmt_modify < now()-->
    order by gmt_modify
    limit 1
  </select>

  <update id="updateByLock" >
    update gid_worker
    set ip = #{worker.ip,jdbcType=VARCHAR},
      pid = #{worker.pid,jdbcType=VARCHAR},
      info = #{worker.info,jdbcType=VARCHAR},
      `operator` = #{worker.operator,jdbcType=VARCHAR},
      gmt_modify = now(3)
    where id = #{worker.id,jdbcType=INTEGER} and operator = #{old}
  </update>
</mapper>